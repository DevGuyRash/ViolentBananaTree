{
  "id": "snapshot_1760929225521_r9j1y1vo5",
  "approvalId": "approval_1760929225518_n76aeueb5",
  "approvalTitle": "DGX steering product doc",
  "version": 1,
  "timestamp": "2025-10-20T03:00:25.521Z",
  "trigger": "initial",
  "status": "pending",
  "content": "Name\nDGX Modular Userscripts Foundation\n\nSummary\nA forkable, recorder-first scaffold for building resilient browser automations as Tampermonkey and Violentmonkey userscripts, with an optional MV3 extension distribution. The foundation emphasizes declarative workflows, stability-focused selectors, cross-tab context sharing, and UI affordances (HUD + inspector/recorder) that make automation authoring fast and reliable.\n\nTarget Users\n- Script Authors who need to stand up page-specific automations quickly without mastering low-level browser APIs.\n- AI Agents tasked with extending the template by following deterministic schemas and docs.\n- Power Users who execute automations through HUD or native userscript menus and expect clear feedback and configuration options.\n\nKey Features\n1. **Declarative Workflow Engine**: Click, type, wait, scroll, context, conditional, and assertion steps expressed in DSL form with retries and templating.\n2. **Selector System with Stability Scoring**: Logical keys map to ordered locator strategies (role/name/text → data attributes → CSS → XPath) with scoped fallbacks and inspector-generated stability notes.\n3. **HUD + Native Menu Interface**: A floating DGX command palette paired with Tampermonkey/Violentmonkey menu entries, offering workflow execution, status, and quick recorder toggles.\n4. **Context Store**: GM storage plus BroadcastChannel synchronization so workflow state persists across tabs and refreshes with TTL handling.\n5. **Visual Inspector & Recorder**: Overlay, selector suggestions, and action recording that export selectors and workflow steps while masking sensitive inputs by default.\n6. **Scroll & List Utilities**: Scroll detectors, scrollUntil patterns, and list collection helpers to robustly automate infinite lists and data gathering.\n7. **Dual Build Targets**: Vite + vite-plugin-monkey userscript build and optional WXT-based MV3 extension packaging from the same codebase.\n\nBusiness Objectives\n- Reduce time-to-first-automation to under 10 minutes through recorder-first authoring and clear docs.\n- Deliver a resilient automation experience that surfaces selector misses and failure reasons explicitly.\n- Ensure reusable modules (core actions, menu, context, selectors) underpin every page so the foundation scales to many sites without duplication.\n- Provide a template that teams can fork with confidence, including spec-driven documentation that AI agents can follow autonomously.\n\nSuccess Metrics\n- `Time to new workflow ≤ 10 minutes` from empty module to runnable HUD command.\n- `Selector miss rate < 5%` during target page changes, with clear logged context when misses occur.\n- `Parity across TM/VM and MV3` builds validated by smoke workflows.\n- `Recorder export accuracy ≥ 95%` requiring no manual selector rewrites for recorded flows.\n\nProduct Principles\n1. **Selector Stability First**: Prefer semantic selectors (role/name/label/test-id) with inspector transparency before CSS/XPath fallbacks.\n2. **Declarative Over Imperative**: Workflows describe intent via DSL steps, keeping automation logic observable, reusable, and testable.\n3. **Recorder-First Authoring**: The inspector/recorder is the primary path to new automations; manual edits remain possible but secondary.\n4. **Documentation as Contract**: README, AGENTS, and specs lead implementers; steering docs remain the canonical source for scope and constraints.\n5. **Client-Only, No Backend**: All state stays in userscript storage and browser APIs; privacy-sensitive data remains local and masked when logged.\n\nMonitoring & Visibility\n- **Dashboard Type**: HUD overlay inside the page with mirrored native menus; no external dashboard for MVP.\n- **Real-time Updates**: Workflow status badges, timeline logs, and recorder overlays update live within the HUD context.\n- **Key Metrics Displayed**: Last run status, selector misses, scrollUntil termination reasons, context mutations, recorder step summaries.\n- **Sharing Capabilities**: Workflows are shared by distributing the userscript/extension build; recorder exports produce JSON/TS artifacts that can be reviewed via PRs.\n\nFuture Vision\n- Expand recorder to support import/export bundles, plugin hooks, and telemetry-assisted selector healing.\n- Offer optional analytics on workflow success/failure (with client-side opt-in) and richer HUD dashboards.\n- Introduce a side-panel UX for the MV3 build to enable multi-pane editing and replay, keeping hover overlays as a lightweight mode.\n- Provide localization and accessibility enhancements for HUD and recorder tooling without sacrificing selector robustness.\n",
  "fileStats": {
    "size": 4615,
    "lines": 51,
    "lastModified": "2025-10-20T02:55:42.003Z"
  },
  "comments": []
}